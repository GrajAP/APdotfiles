{
    "layer": "top", // Waybar at top layer
    "position": "left", // Waybar position (top|bottom|left|right)
    //"height": 30, // Waybar height (to be removed for auto height)
    "width": 54, // Waybar width
    "spacing": 7, // Gaps between modules (4px)
    // Choose the order of the modules
    "margin": "0,0,0,0",
    "fixed0center": "false",
    "exclusive": "true",
    "modules-left": [
    	"hyprland/workspaces"
    ],
    "modules-center": [
    	//"hyprland/window", 
//    	"custom/weather", 
    	"clock"
    ],
    "modules-right": [
	 "custom/swallow"
    //	 "pulseaudio", 
	// "network", 
	// "custom/power"
    ],
    // Modules configuration
     "hyprland/workspaces": {
         "disable-scroll": true,
         "all-outputs": true,
         "warp-on-scroll": false,
         "format":  "{icon}",
         "format-icons": {
             "1": "",
             "2": "󰈹",
             "3": "",
             "4": "",
           //  "5": "󰓇",

         },
         "persistent-workspaces" : {
            "*" : 4
          }

     },
       "clock": {
        "timezone": "Europe/Warsaw",
	"on-click": "xdg-open https://calendar.google.com/calendar/",
	"format": "{:%H %M}",
        "tooltip-format": "<big>{:%Y %B}</big>
            <tt><small>{calendar}</small></tt>",
          },
       "custom/backlight": {
	"device": "acpi_video1",
        "format": "{percent}% {icon}",
        "format-icons": ["", "", "", "", "", "", "", "", ""]
    },
    "network": {
        // "interface": "wlp2*", // (Optional) To force the use of this interface
        "format-wifi": "({signalStrength}%) ",
        "format-ethernet": "󰈀",
	"tooltip": false,
        "format-linked": "{ifname} (No IP) ",
        "format-disconnected": "Disconnected ⚠",
        "on-click": "killall nm-connection-editor || nm-connection-editor"
    },
    "pulseaudio": {
    "tooltip": false,
        "scroll-step": 5, // %, can be a float
        "format": "{icon}",
        "format-muted": " ",
        "format-source": "{volume}% ",
        "format-source-muted": "",
        "format-icons": {
            "headphone": "",
            "default": ["", "", ""]
        },
        "on-click": "killall pavucontrol || pavucontrol"
    },
    "custom/lock" : 
    {
    	"tooltip": false,
        "on-click" : "sleep 0.5s; swaylock & disown",
        "format" : ""
    },
    "custom/power" : 
    {
       "tooltip": false,
       //"on-click": "!shutdown -h now",
	"format" : "󰐥",
	"on-click": "wlogout -b 2 -c 5 -r 5 -p layer-shell"
},
   }
        modules-left : [
                  "custom/crypto"
                   # "custom/eth"
        ]
        modules-center : [
          "custom/weather"
        ]
        modules-right : [ "custom/swallow" ]
       

        
       
        "custom/weather" : let
          weather : pkgs.stdenv.mkDerivation {
            name : "waybar-wttr"
            buildInputs : [
              (pkgs.python39.withPackages
                (pythonPackages: with pythonPackages [requests pyquery]))
            ]
            unpackPhase : "true"
            installPhase : ''
              mkdir -p $out/bin
              cp ${./weather.py} $out/bin/weather
              chmod +x $out/bin/weather
            ''
          }
        in {
          format : "{}"
          tooltip : true
          interval : 30
          exec : "${weather}/bin/weather"
          return-type : "json"
        }
        "custom/crypto" : let
          crypto : pkgs.stdenv.mkDerivation {
            name : "waybar-wttr"
            buildInputs : [
              (pkgs.python39.withPackages
                (pythonPackages: with pythonPackages [requests]))
            ]
            unpackPhase : "true"
            installPhase : ''
              mkdir -p $out/bin
              cp ${./crypto.py} $out/bin/crypto
              chmod +x $out/bin/crypto
            ''
          }
        in {
          format : "{}"
          tooltip : true
          interval : 30
          exec : "${crypto}/bin/crypto"
          return-type : "json"
        }
        "custom/swallow" : {
          tooltip : false
          on-click : let
            hyprctl : config.wayland.windowManager.hyprland.package + "/bin/hyprctl"
            notify-send : pkgs.libnotify + "/bin/notify-send"
            rg : pkgs.ripgrep + "/bin/rg"
          in
            pkgs.writeShellScript "waybar-swallow" ''
              #!/bin/sh
              if ${hyprctl} getoption misc:enable_swallow | ${rg}/bin/rg -q "int: 1" then
              	${hyprctl} keyword misc:enable_swallow false >/dev/null &&
              		${notify-send} "Hyprland" "Turned off swallowing"
              else
              	${hyprctl} keyword misc:enable_swallow true >/dev/null &&
              		${notify-send} "Hyprland" "Turned on swallowing"
              fi
            ''
          format : "󰘻"
        }
       
